{"version":3,"sources":["components/Home.tsx","components/Navbar.tsx","components/PageNotFound.tsx","api.ts","components/Loader/Loader.tsx","components/PersonalLink.tsx","components/PeoplePage.tsx","App.tsx","index.tsx"],"names":["HomePage","className","Navbar","role","to","isActive","PageNotFound","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","Loader","PersonalLink","person","slug","sex","name","cn","PeoplePage","useState","people","setPeople","isLoading","setIsLoading","hasError","setHasError","useParams","loadPeople","loadedPeople","useEffect","length","map","born","died","fatherName","motherName","PersonSlug","foundMother","find","mother","foundFather","father","App","path","element","createRoot","document","getElementById","render"],"mappings":"qPAAaA,EAAW,kBAAM,oBAAIC,UAAU,QAAd,sBAAN,ECEXC,EAAS,kBACpB,qBACE,UAAQ,MACRD,UAAU,iCACVE,KAAK,aACL,aAAW,kBAJb,SAME,qBAAKF,UAAU,YAAf,SACE,sBAAKA,UAAU,eAAf,UACE,cAAC,IAAD,CACEG,GAAG,IACHH,UAAW,qBAAGI,SACV,0CACA,aAFO,EAFb,kBAQA,cAAC,IAAD,CACED,GAAG,UACHH,UAAW,qBAAGI,SACV,0CACA,aAFO,EAFb,0BAjBc,ECFTC,EAAe,kBAAM,oBAAIL,UAAU,QAAd,2BAAN,E,6CCSrB,SAASM,IAEd,OANYC,EAMA,IALL,IAAIC,SAAQ,SAAAC,GAAO,OAAIC,WAAWD,EAASF,EAAxB,KAMvBI,MAAK,kBAAMC,MATA,oEASN,IACLD,MAAK,SAAAE,GAAQ,OAAIA,EAASC,MAAb,IARlB,IAAcP,CASb,C,UCZYQ,EAAS,kBACpB,qBAAKf,UAAU,SAAS,UAAQ,SAAhC,SACE,qBAAKA,UAAU,qBAFG,ECMTgB,EAAgC,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACtCC,EAAoBD,EAApBC,KAAMC,EAAcF,EAAdE,IAAKC,EAASH,EAATG,KAEnB,OACE,cAAC,IAAD,CACEjB,GAAE,kBAAae,GACflB,UAAWqB,IAAG,CACZ,kBAA2B,MAARF,IAHvB,SAMGC,GAGN,ECbYE,EAAa,WACxB,MAA4BC,mBAAmB,IAA/C,mBAAOC,EAAP,KAAeC,EAAf,KACA,EAAkCF,oBAAS,GAA3C,mBAAOG,EAAP,KAAkBC,EAAlB,KACA,EAAgCJ,oBAAS,GAAzC,mBAAOK,EAAP,KAAiBC,EAAjB,KAEQX,EAASY,cAATZ,KAEFa,EAAU,iDAAG,8GAEfJ,GAAa,GAFE,SAGYrB,IAHZ,OAGT0B,EAHS,OAKfP,EAAUO,GALK,gDAOfH,GAAY,GAPG,yBASfF,GAAa,GATE,4EAAH,qDAiBhB,OAJAM,qBAAU,WACRF,GACD,GAAE,IAGD,qCACE,oBAAI/B,UAAU,QAAd,yBACA,qBAAKA,UAAU,QAAf,SACE,qBAAKA,UAAU,sBAAf,SACG0B,EAAY,cAAC,EAAD,IAET,sCACIA,GAAaE,GACb,mBAAG,UAAQ,qBAAqB5B,UAAU,kBAA1C,mCAIA0B,IAAcE,IAAaJ,EAAOU,QAEtC,mBAAG,UAAQ,kBAAX,+CAIE,wBACE,UAAQ,cACRlC,UAAU,uDAFZ,UAKE,gCACE,+BACE,sCACA,qCACA,sCACA,sCACA,wCACA,6CAGJ,iCACI0B,GAAaF,EAAOW,KAAI,SAAAlB,GACxB,IACEE,EAMEF,EANFE,IACAiB,EAKEnB,EALFmB,KACAC,EAIEpB,EAJFoB,KACAC,EAGErB,EAHFqB,WACAC,EAEEtB,EAFFsB,WACMC,EACJvB,EADFC,KAGIuB,EAAcjB,EACjBkB,MAAK,SAAAC,GAAM,OAAIA,EAAOvB,OAASmB,CAApB,KAAmC,KAE3CK,EAAcpB,EACjBkB,MAAK,SAAAG,GAAM,OAAIA,EAAOzB,OAASkB,CAApB,KAAmC,KAEjD,OACE,qBACE,UAAQ,SACRtC,UAAWqB,IAAG,CACZ,yBACIH,IAASsB,IAJjB,UAQE,6BACE,cAAC,EAAD,CAAcvB,OAAQA,MAExB,6BAAKE,IACL,6BAAKiB,IACL,6BAAKC,IACL,6BACII,EACE,cAAC,EAAD,CAAcxB,OAAQwB,IACtB,4BAAIF,GAAc,QAExB,6BACIK,EACE,cAAC,EAAD,CAAc3B,OAAQ2B,IACtB,4BAAIN,GAAc,UAhBnBE,EAoBV,kBASpB,EC7GYM,EAAM,WACjB,OACE,sBAAK,UAAQ,MAAb,UACE,cAAC,EAAD,IACA,sBAAM9C,UAAU,UAAhB,SACE,qBAAKA,UAAU,YAAf,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAO+C,KAAK,IAAIC,QAAS,cAAC,EAAD,MACzB,cAAC,IAAD,CAAOD,KAAK,QAAQC,QAAS,cAAC,IAAD,CAAU7C,GAAG,QAC1C,cAAC,IAAD,CAAO4C,KAAK,UAAUC,QAAS,cAAC,EAAD,MAC/B,cAAC,IAAD,CAAOD,KAAK,gBAAgBC,QAAS,cAAC,EAAD,MACrC,cAAC,IAAD,CAAOD,KAAK,IAAIC,QAAS,cAAC,EAAD,eAMpC,ECnBDC,qBAAWC,SAASC,eAAe,SAChCC,OACC,cAAC,IAAD,UACE,cAAC,EAAD,M","file":"static/js/main.9c9fdb1f.chunk.js","sourcesContent":["export const HomePage = () => <h1 className=\"title\">Home Page</h1>;\n","import { NavLink } from 'react-router-dom';\n\nexport const Navbar = () => (\n  <nav\n    data-cy=\"nav\"\n    className=\"navbar is-fixed-top has-shadow\"\n    role=\"navigation\"\n    aria-label=\"main navigation\"\n  >\n    <div className=\"container\">\n      <div className=\"navbar-brand\">\n        <NavLink\n          to=\"/\"\n          className={({ isActive }) => (isActive\n            ? 'navbar-item has-background-grey-lighter'\n            : 'navbar-item')}\n        >\n          Home\n        </NavLink>\n        <NavLink\n          to=\"/people\"\n          className={({ isActive }) => (isActive\n            ? 'navbar-item has-background-grey-lighter'\n            : 'navbar-item')}\n        >\n          People\n        </NavLink>\n      </div>\n    </div>\n  </nav>\n);\n","export const PageNotFound = () => <h1 className=\"title\">Page not found</h1>;\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Link } from 'react-router-dom';\nimport cn from 'classnames';\nimport { Person } from '../types';\n\ninterface Props {\n  person: Person;\n}\n\nexport const PersonalLink: React.FC<Props> = ({ person }) => {\n  const { slug, sex, name } = person;\n\n  return (\n    <Link\n      to={`/people/${slug}`}\n      className={cn({\n        'has-text-danger': sex === 'f',\n      })}\n    >\n      {name}\n    </Link>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport cn from 'classnames';\nimport { useParams } from 'react-router-dom';\nimport { getPeople } from '../api';\nimport { Person } from '../types';\nimport { Loader } from './Loader';\nimport { PersonalLink } from './PersonalLink';\n\nexport const PeoplePage = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [hasError, setHasError] = useState(false);\n\n  const { slug } = useParams<{ slug: string }>();\n\n  const loadPeople = async () => {\n    try {\n      setIsLoading(true);\n      const loadedPeople = await getPeople();\n\n      setPeople(loadedPeople);\n    } catch (error) {\n      setHasError(true);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    loadPeople();\n  }, []);\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {isLoading ? <Loader />\n            : (\n              <>\n                {!isLoading && hasError && (\n                  <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n                    Something went wrong\n                  </p>\n                )}\n                {!isLoading && !hasError && !people.length\n            && (\n              <p data-cy=\"noPeopleMessage\">\n                There are no people on the server\n              </p>\n            )}\n                <table\n                  data-cy=\"peopleTable\"\n                  className=\"table is-striped is-hoverable\n                      is-narrow is-fullwidth\"\n                >\n                  <thead>\n                    <tr>\n                      <th>Name</th>\n                      <th>Sex</th>\n                      <th>Born</th>\n                      <th>Died</th>\n                      <th>Mother</th>\n                      <th>Father</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {!isLoading && people.map(person => {\n                      const {\n                        sex,\n                        born,\n                        died,\n                        fatherName,\n                        motherName,\n                        slug: PersonSlug,\n                      } = person;\n\n                      const foundMother = people\n                        .find(mother => mother.name === motherName) || null;\n\n                      const foundFather = people\n                        .find(father => father.name === fatherName) || null;\n\n                      return (\n                        <tr\n                          data-cy=\"person\"\n                          className={cn({\n                            'has-background-warning':\n                                slug === PersonSlug,\n                          })}\n                          key={PersonSlug}\n                        >\n                          <td>\n                            <PersonalLink person={person} />\n                          </td>\n                          <td>{sex}</td>\n                          <td>{born}</td>\n                          <td>{died}</td>\n                          <td>\n                            { foundMother\n                              ? <PersonalLink person={foundMother} />\n                              : <p>{motherName || '-'}</p>}\n                          </td>\n                          <td>\n                            { foundFather\n                              ? <PersonalLink person={foundFather} />\n                              : <p>{fatherName || '-'}</p>}\n                          </td>\n                        </tr>\n                      );\n                    })}\n                  </tbody>\n                </table>\n              </>\n            )}\n        </div>\n      </div>\n    </>\n  );\n};\n","import {\n  Navigate,\n  Route, Routes,\n} from 'react-router-dom';\nimport './App.scss';\nimport { HomePage } from './components/Home';\nimport { Navbar } from './components/Navbar';\nimport { PageNotFound } from './components/PageNotFound';\nimport { PeoplePage } from './components/PeoplePage';\n\nexport const App = () => {\n  return (\n    <div data-cy=\"app\">\n      <Navbar />\n      <main className=\"section\">\n        <div className=\"container\">\n          <Routes>\n            <Route path=\"/\" element={<HomePage />} />\n            <Route path=\"/home\" element={<Navigate to=\"/\" />} />\n            <Route path=\"/people\" element={<PeoplePage />} />\n            <Route path=\"/people/:slug\" element={<PeoplePage />} />\n            <Route path=\"*\" element={<PageNotFound />} />\n          </Routes>\n        </div>\n      </main>\n    </div>\n  );\n};\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}